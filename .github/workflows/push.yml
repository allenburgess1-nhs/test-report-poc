name: Tests

on: [push, workflow_dispatch]
permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8   
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install allure-pytest

    - name: Run PyTests
      run: |
        mkdir reports
        pytest --alluredir=reports/allure-results
      continue-on-error: true
    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: pytest-results
        path: reports

  report:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - uses: actions/download-artifact@v3
      with:
        name: pytest-results

    - name: Display structure of downloaded files
      run: ls -R

    - name: Get Allure history
      uses: actions/checkout@v3
      if: always()
      continue-on-error: true
      with:
        ref: gh-pages
        path: gh-pages
    - name: Allure Report
      uses: simple-elf/allure-report-action@v1.6
      if: always()
      with:
        allure_results: allure-results
        keep_reports: '20'
    - name: Deploy report to Github Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages
        publish_dir: allure-history

  publish:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version-file: 'pyproject.toml'

      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: add poetry plugins
        shell: bash
        run: |
          poetry self add "poetry-dynamic-versioning[plugin]"

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        continue-on-error: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v0.0.1"
          release_name: "v.0.0.1"